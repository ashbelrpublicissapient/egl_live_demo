trigger:
  branches:
    include:
      - main

variables:
  cloud: "Azure"
  instanceName: "qa-instance-01"
  clusterName: "qa-aks-cluster"
  subnetName: "qa-subnet-01"
  vnetName: "qa-vnet-main"

stages:
  - stage: TerraformInit
    displayName: 'Initialize Terraform'
    jobs:
      - job: InitTerraform
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: none
          - script: |
              echo "Initializing Terraform configuration..."
              echo "terraform init (dummy run)"
              echo "Terraform init complete."
            displayName: 'Terraform Init'

  - stage: TerraformPlan
    displayName: 'Generate Terraform Plan'
    dependsOn: TerraformInit
    jobs:
      - job: PlanInfra
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: none
          - script: |
              echo "Generating Terraform plan..."
              echo "terraform plan -var 'cloud=${{ variables.cloud }}' -var 'instance_name=${{ variables.instanceName }}' (dummy run)"
              echo "Plan generated."
            displayName: 'Terraform Plan'

  - stage: TerraformApply
    displayName: 'Apply Terraform Configuration'
    dependsOn: TerraformPlan
    jobs:
      - job: ApplyInfra
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: none
          - script: |
              echo "Applying Terraform configuration..."
              echo "terraform apply -auto-approve (dummy run)"
              echo "Resources created successfully."
            displayName: 'Terraform Apply'

  - stage: ReturnProvisionedDetails
    displayName: 'Return Provisioned Resource Details'
    dependsOn: TerraformApply
    jobs:
      - job: CompleteSR
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: none
          - script: |
              echo "Provisioning completed. Returning details to ServiceNow..."
              echo "Instance ID: i-dummy123456"
              echo "Cluster Name: ${{ variables.clusterName }}"
              echo "VNet/Subnet: ${{ variables.vnetName }} / ${{ variables.subnetName }}"
              echo "ServiceNow SR updated and resolved."
            displayName: 'Finalize and Update SR'
